/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package crucipuzzle;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.print.PrintException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 * Interfaccia grafica finale, dove verr√† mostrato
 * il campo, le parole e i pulsanti di export e per
 * la soluzione.
 * 
 * @author Jacopo Faul
 * @version 01.12.2023
 */
public class MainForm extends javax.swing.JFrame {

    Campo campo;
    Parole parole;
    TableModel modello;
    TableModel modelloParole;
    String getMessage;
    int numeroParole;
    double numeroColonne;

    /**
     * Creates new form MainForm
     */
    public MainForm(Parole parole, Campo campo, Font font) {
        this.campo = campo;
        this.parole = parole;
        campo.generaCampo();
        initComponents();
        if (campo.getDifficolta() == 3) {
            jlblParolaNascosta.setVisible(true);
            selezionaParolaNascosta();
        } else 
            jlblParolaNascosta.setVisible(false);
        modello = new GameTableModel(campo.getGrandezzaCampo());
        ArrayList<String> a = campo.getArrayParole();
        a.remove("");
        numeroParole = a.size();
        numeroColonne = 4;
        modelloParole = new WordsTableModel((int)Math.ceil(numeroParole / 4.0), 4);
        jtblGame.setModel(modello);
        jtblWords.setModel(modelloParole);
        jtblGame.setFont(font);
        jtblWords.setFont(font);
        inserisciInTabella();
        inserisciParole();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtblGame = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnPNG = new javax.swing.JButton();
        btnTXT = new javax.swing.JButton();
        jtblWords = new javax.swing.JTable();
        jlblParolaNascosta = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnTXT1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CruciPuzzle");
        setBackground(new java.awt.Color(255, 255, 255));

        jtblGame.setBackground(Color.WHITE);
        jtblGame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jtblGame.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jtblGame.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jtblGame.setEditingColumn(0);
        jtblGame.setEditingRow(0);
        jtblGame.setEnabled(false);
        jtblGame.setGridColor(Color.white);
        jtblGame.setName("JTableGame"); // NOI18N
        jtblGame.setTableHeader(null);

        btnPrint.setText("STAMPA");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnPNG.setText("Esporta in PNG");
        btnPNG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPNGActionPerformed(evt);
            }
        });

        btnTXT.setText("Esporta in TXT");
        btnTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTXTActionPerformed(evt);
            }
        });

        jtblWords.setEditingColumn(0);
        jtblWords.setEditingRow(0);
        jtblWords.setEnabled(false);
        jtblWords.setName("JTableWords"); // NOI18N

        jlblParolaNascosta.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jlblParolaNascosta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblParolaNascosta.setText("Parola Nascosta: ....................................");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cruci Puzzle");

        btnTXT1.setText("Soluzioni");
        btnTXT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTXT1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblParolaNascosta, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                    .addComponent(jtblWords, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtblGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPNG)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTXT)
                        .addGap(18, 18, 18)
                        .addComponent(btnTXT1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(jtblGame, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtblWords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE)
                .addComponent(jlblParolaNascosta)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPNG, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTXT1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPNGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPNGActionPerformed
        savePNG();
    }//GEN-LAST:event_btnPNGActionPerformed

    private void btnTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTXTActionPerformed
        saveTXT();
    }//GEN-LAST:event_btnTXTActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        printToPrinter();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnTXT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTXT1ActionPerformed
        SoluzioneForm soluzione = new SoluzioneForm(campo.getArraySoluzioni());
        soluzione.setVisible(true);
    }//GEN-LAST:event_btnTXT1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                //new MainForm(null,null).setVisible(true);
//            }
//        });
//    }

    public boolean vaBeneLaParola(String parolaNascosta) {
        parolaNascosta = parole.pulisciParola(parolaNascosta);
        parolaNascosta = parolaNascosta.trim();
        parolaNascosta = parolaNascosta.replaceAll("[^a-zA-Z]", "");
        getMessage = parolaNascosta;

        return parolaNascosta.length() != campo.getNumeroSpazi();
    }

    /**
     * Mi seleziona la parola nascosta
     */
    public void selezionaParolaNascosta() {
        JFrame jFrame = new JFrame();
        getMessage = "";
        while (vaBeneLaParola(getMessage)) {
            getMessage = JOptionPane.showInputDialog(jFrame, "Inserisci una parola/frase nascosta di " + campo.getNumeroSpazi() + " caratteri:");
            if (getMessage == null) {
                getMessage = "";
            }
        }
        campo.inserisciParolaNascosta(getMessage);
        System.out.println(getMessage);
    }

    public void inserisciInTabella() {
        Lettera[][] campoGioco = campo.getCampo();
        jtblGame.setTableHeader(null);
        for (int i = 0; i < campo.getGrandezzaCampo(); i++) {
            for (int j = 0; j < campo.getGrandezzaCampo(); j++) {
                jtblGame.setValueAt(campoGioco[i][j], i, j);
            }
        }
        jtblGame.setRowHeight(jtblGame.getHeight() / campo.getGrandezzaCampo());
        campo.stampa();
    }

    public void inserisciParole() {
        ArrayList<String> arrayParole = campo.getArrayParole();
        jtblWords.setTableHeader(null);
        
        int indice = 0;
        double ripetizioniPerFor = Math.ceil(numeroParole / 4.0);
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < (int)ripetizioniPerFor; j++) {
                if (indice < numeroParole)
                    jtblWords.setValueAt(arrayParole.get(indice), j, i);
                indice++;
            }
        }
    }

    public void savePNG() {
        impostaPagina(false);
        String nomeFile = JOptionPane.showInputDialog("Inserisci nome del file:");
        BufferedImage bImg = new BufferedImage(this.getWidth(), this.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D cg = bImg.createGraphics();
        this.paintAll(cg);
        try {
            if (ImageIO.write(bImg, "png", new File("./"+nomeFile+".png"))) {
                System.out.println("-- saved");
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        impostaPagina(true);
    }

    public void saveTXT() {
        String nomeFile = JOptionPane.showInputDialog("Inserisci nome del file:");
        try {
            FileWriter myWriter = new FileWriter(nomeFile+".txt");
            for (int i = 0; i < campo.getGrandezzaCampo(); i++) {
                for (int j = 0; j < campo.getGrandezzaCampo(); j++) {
                    myWriter.write((String)campo.getCampo()[i][j].lettera + " ");
                }
                myWriter.write("\n\r");
            }
            
            // Per inserire le parole
            
            int ripetizioniPerFor = (int)Math.ceil(campo.getArrayParole().size() / 4.0);
            int indice = 0;
            for (int i = 0; i < ripetizioniPerFor; i++) {
                String p1 = "";
                String p2 = "";
                String p3 = "";
                String p4 = "";
                if (indice < campo.getArrayParole().size())
                    p1 = campo.getArrayParole().get(indice);
                if (indice + ripetizioniPerFor < campo.getArrayParole().size())
                    p2 = campo.getArrayParole().get(indice + ripetizioniPerFor);
                if (indice + (ripetizioniPerFor * 2) < campo.getArrayParole().size())
                    p3 = campo.getArrayParole().get(indice + (ripetizioniPerFor * 2));
                if (indice + (ripetizioniPerFor * 3) < campo.getArrayParole().size())
                    p4 = campo.getArrayParole().get(indice + (ripetizioniPerFor * 3));
                indice++;
                myWriter.write(p1 + ", " + p2 + ", " + p3 + ", " + p4 + "\n\r");
            }
            
            
            myWriter.close();
            System.out.println("Successfully wrote to the file.");
        } catch (IOException e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
 
    public void printToPrinter() {
        impostaPagina(false);
        MainForm mainForm = this;
        PrinterJob job = PrinterJob.getPrinterJob();
        Printable contentToPrint = new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                if (pageIndex > 0) {
                    return Printable.NO_SUCH_PAGE;
                }
                Graphics2D g2d = (Graphics2D) graphics;
                mainForm.print(g2d);
                return Printable.PAGE_EXISTS;
            }
        };
        job.setPrintable(contentToPrint);
        if (job.printDialog()) {
            try {
                job.print();
            } catch (PrinterException e) {
                e.printStackTrace();
            }
        }
        impostaPagina(true);
    }
    
    public void impostaPagina(boolean valore) {
        btnPNG.setVisible(valore);
        btnPrint.setVisible(valore);
        btnTXT.setVisible(valore);
        btnTXT1.setVisible(valore);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPNG;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnTXT;
    private javax.swing.JButton btnTXT1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jlblParolaNascosta;
    private javax.swing.JTable jtblGame;
    private javax.swing.JTable jtblWords;
    // End of variables declaration//GEN-END:variables
}
